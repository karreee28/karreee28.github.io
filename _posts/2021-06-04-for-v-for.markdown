---
layout: post
title:  "for, v-for 관련"
date:   2021-06-04 00:00:00 +0900
categories: study
tags: [javascript, vue.js]
---
### v-for 기초(리스트)

##### //레이아웃
```html
<ul>
  <li v-for="item in items" :key="item.user_id">
    <p> item.user_name </p>
    <p> item.tel1 </p>
  </li>
</ul>
```
여기서 'item'은 무슨 이름이어도 상관 없음('items' 배열의 항목 이름을 정의) <br>
key는 각 item의 데이터 중 고유한 값을 가져와야함. 

##### //데이터
```javascript
items: [
  {
    user_id: 40,
    user_name: 'Dickerson',
    tel1: '010-000-0030'
  },
  {
    user_id: 41,
    user_name: 'John Doe',
    tel1: '010-000-0030'
  }
]
```

### v-for 활용(ex. 멤버 추가/수정)

##### //레이아웃(수정)
```html
<!-- 수정일 경우 예시 레이아웃 -->
<div class="edit" v-for="pet in pets" :key="pet.pet_id">
  <!-- 배열을 for문으로 돌림 -->
  <el-button size="small" class="submit-btn" @click="putPet">저장</el-button>
  <el-row class="form-row">
    <el-col class="form-col">
      <div class="form-label">구분</div>
      <div class="form-cont">
        <el-radio-group v-model="pet.type">
          <el-radio-button label="강아지"></el-radio-button>
          <el-radio-button label="고양이"></el-radio-button>
        </el-radio-group>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">이름</div>
      <div class="form-cont">
        <el-input v-model="pet.pet_name"></el-input>
      </div>
    </el-col>
    <el-col :span="12" :xs="24" class="form-col pet-age">
      <div class="form-label">나이</div>
      <div class="form-cont">
        <el-input v-model="pet.age_y"></el-input>
        <span>년</span>
        <el-input v-model="pet.age_m"></el-input>
        <span>개월</span>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">품종</div>
      <div class="form-cont">
        <el-input placeholder="Please input" v-model="pet.kind_name">
          <template slot="append">
            <el-button @click="modalOpen(pet, index)">선택하기</el-button>
          </template>
        </el-input>
      </div>
    </el-col>
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">성별</div>
      <div class="form-cont">
        <el-radio-group v-model="pet.sex">
          <el-radio-button label="남"></el-radio-button>
          <el-radio-button label="여"></el-radio-button>
        </el-radio-group>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">몸무게</div>
      <div class="form-cont">
        <el-input v-model="pet.weight"></el-input>
      </div>
    </el-col>
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">중성화</div>
      <div class="form-cont">
        <el-switch
          v-model="pet.de_sexing"
          active-text="중성"
          inactive-text="중성 아님">
        </el-switch>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <div class="form-label">메모</div>
    <div class="form-cont">
      <el-input type="textarea" v-model="pet.memo"></el-input>
    </div>
  </el-row>
</div>
```

##### //레이아웃(추가)

```html
<!--추가일 경우 예시 레이아웃-->  
<el-button size="small" @click="addPet">반려동물추가</el-button>
<div class="add" v-for="(pet, index) in newPets" :key="index">
  <!-- 배열을 for문으로 돌림 / 각 pet에 index를 부여 -->
  <el-button size="small" class="submit-btn" @click="postPet(pet)">저장</el-button>
  <el-row class="form-row">
    <el-col class="form-col">
      <div class="form-label">구분</div>
      <div class="form-cont">
        <el-radio-group v-model="pet.type">
          <el-radio-button label="강아지"></el-radio-button>
          <el-radio-button label="고양이"></el-radio-button>
        </el-radio-group>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">이름</div>
      <div class="form-cont">
        <el-input v-model="pet.pet_name"></el-input>
      </div>
    </el-col>
    <el-col :span="12" :xs="24" class="form-col pet-age">
      <div class="form-label">나이</div>
      <div class="form-cont">
        <el-input v-model="pet.age_y"></el-input>
        <span>년</span>
        <el-input v-model="pet.age_m"></el-input>
        <span>개월</span>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">품종</div>
      <div class="form-cont">
        <el-input placeholder="Please input" v-model="pet.kind_name">
          <template slot="append">
            <el-button @click="modalOpen(pet, index)">선택하기</el-button>
          </template>
        </el-input>
      </div>
    </el-col>
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">성별</div>
      <div class="form-cont">
        <el-radio-group v-model="pet.sex">
          <el-radio-button label="남"></el-radio-button>
          <el-radio-button label="여"></el-radio-button>
        </el-radio-group>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">몸무게</div>
      <div class="form-cont">
        <el-input v-model="pet.weight"></el-input>
      </div>
    </el-col>
    <el-col :span="12" :xs="24" class="form-col">
      <div class="form-label">중성화</div>
      <div class="form-cont">
        <el-switch
          v-model="pet.de_sexing"
          active-text="중성"
          inactive-text="중성 아님">
        </el-switch>
      </div>
    </el-col>
  </el-row>
  <el-row class="form-row">
    <el-col class="form-col">
      <div class="form-label">메모</div>
      <div class="form-cont">
        <el-input type="textarea" v-model="pet.memo">
        </el-input>
      </div>
    </el-col>
  </el-row>
</div>
```
저장버튼(putPet)을 누르면 입력 되어있는 데이터를 API로 저장 <br>
추가버튼(addPet)을 누르면 새로운 폼을 for문을 통해 생성

##### //데이터
```javascript
data() {
  return {
    pets: [], 
    newPets: []
  }
},
```
빈 배열을 데이터에 정의(method에서 넣어줌)

##### //함수

```javascript
methods: {
  putPet: async function() {
    // API로 데이터 put (보통 기존 데이터 수정 시 사용)
  },
  postPet: async function(item) {
    // API로 데이터 post (데이터 추가 시 사용)
  },
  getList: async function() {
    // API로 데이터 get. 아래 배열은 임시 데이터. 
    let rs = [
      {
        pet_id: 1,
        type: '강아지',
        pet_name: '삼월이',
        age_y: '6',
        age_m: '3',
        kind_name: '포메라니안',
        sex: '남',
        weight: '3.5kg',
        de_sexing: true,
        memo: '건조한 음성에 화를 내는 편'
      },
      {
        pet_id: 2,
        type: '고양이',
        pet_name: '사월이',
        age_y: '2',
        age_m: '3',
        kind_name: '메인쿤',
        sex: '남',
        weight: '16.2kg',
        de_sexing: true,
        memo: '천천히 상냥히 정리하면 얌전하다'
      }
    ]
    this.pets = rs;
  },
  addPet: function() {
    // 데이터 추가 일 경우 사용
    this.newPets.push(
      {
        type: '강아지',
        pet_name: '',
        age_y: '',
        age_m: '',
        kind_name: '',
        sex: '',
        weight: '',
        de_sexing: true,
        memo: ''
      }
    )
  }
}

```
for문을 돌릴 배열과 API로드 시 필요한 함수를 methods에 정의